{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helper/auth.guard.ts","webpack:///src/app/_helper/index.ts","webpack:///src/app/_helper/jwt.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/todo.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/todo/todo.component.ts","webpack:///src/app/todo/todo.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","providedIn","JwtInterceptor","request","next","console","log","JSON","parse","sessionStorage","getItem","token","clone","setHeaders","Authorization","handle","AuthenticationService","http","currentUserSubject","asObservable","username","password","post","pipe","user","setItem","stringify","error","status","alert","data","removeItem","value","TodoService","userId","todo","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","subscribe","x","logout","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoginComponent","formBuilder","submitted","loading","loginForm","group","required","minLength","invalid","login","onSubmit","RegisterComponent","registerForm","register","TodoComponent","todoService","todoList","listTode","todoForm","description","_id","createdBy","save","response","push","message","getAll","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        // console.log('currentUser',currentUser);\r\n        if (currentUser) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","export * from './jwt.interceptor';\r\nexport * from './auth.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        // const currentUser = sessionStorage.getItem('currentUser');\r\n\r\n        console.log('jwt ', JSON.parse(sessionStorage.getItem('currentUser')));\r\n        // console.log('jwt iiii', sessionStorage.getItem('currentUser'));\r\n        if (JSON.parse(sessionStorage.getItem('currentUser')) !== null) {\r\n            if (currentUser && currentUser.token) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: `Bearer ${currentUser.token}`\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: ''\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../_model/user.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        console.log('this.currentUserSubject', this.currentUserSubject);\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>('/auth/login', { username, password })\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }\r\n\r\n                return user;\r\n            }, error => {\r\n                console.log('error', error);\r\n                if (error.status === 404) {\r\n                    alert(error.data);\r\n                } else if (error.status === 302) {\r\n                    alert(error.data);\r\n                }\r\n            }\r\n            ));\r\n    }\r\n\r\n    register(username: string, password: string) {\r\n        return this.http.post<any>('/auth/register', { username, password })\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }\r\n\r\n                return user;\r\n            }, error => {\r\n                console.log('error', error);\r\n                if (error.status === 404) {\r\n                    alert(error.data);\r\n                } else if (error.status === 302) {\r\n                    alert(error.data);\r\n                }\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        sessionStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n\r\n","export * from './authentication.service';\r\nexport * from './todo.service';\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Todo } from '../_model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll(userId: any) {\r\n        return this.http.post('api/todo/list', { id: userId });\r\n    }\r\n    save(todo: Todo) {\r\n        return this.http.post('api/todo/save', todo);\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TodoComponent } from './todo/todo.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './_helper';\n\nconst routes: Routes = [\n  { path: '', component: TodoComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_model/user.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crud';\n  currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n}\n}\n","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-black\" *ngIf=\"currentUser\">\n  <div class=\"navbar-nav\">\n      <button class=\"btn btn-primary\" (click)=\"logout()\">Logout</button>\n  </div>\n</nav>\n\n\n<!-- main app container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-6 offset-sm-3\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from './_helper';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  loading = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    console.log('this = ', this.loginForm);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      alert('form invalid');\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.loginForm.value.username, this.loginForm.value.password)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          console.log('error', error);\n          console.log('error status', error.status);\n\n          if (error.status === 404) {\n            alert(error.error.data);\n          } else if  (error.status === 302) {\n            alert(error.error.data);\n          }\n          this.loading = false;\n        });\n  }\n}\n","<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" required />\n        <div class=\"error\"\n            *ngIf=\"loginForm.get('username').hasError('required') && loginForm.get('username').touched\">\n            UserName is required\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" required />\n        <div class=\"error\"\n            *ngIf=\"loginForm.get('password').hasError('required') && loginForm.get('password').touched\">\n            Password is required\n        </div>\n        <div class=\"error\" *ngIf=\"loginForm.get('password').hasError('length')\">\n            Password must min 6 character length\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"!loginForm.valid\" class=\"btn btn-primary\">Login</button>\n        <a [routerLink]=\"['/register']\" class=\"btn btn-link\">Register</a>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.register(this.registerForm.value.username, this.registerForm.value.password)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          if (error.status === 404) {\n            alert(error.error.data);\n          } else if  (error.status === 302) {\n            alert(error.error.data);\n          }\n          // this.loading = false;\n        });\n  }\n\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" />\n        <div class=\"error\"\n            *ngIf=\"registerForm.get('username').hasError('required') && registerForm.get('username').touched\">\n            UserName is required\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\n        <div class=\"error\"\n            *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\n            Password is required\n        </div>\n        <div class=\"error\" *ngIf=\"registerForm.get('password').hasError('length')\">\n            Password must min 6 character length\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\">Register</button>\n        <a [routerLink]=\"['/login']\" class=\"btn btn-link\">Login</a>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TodoService, AuthenticationService } from '../_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  todoForm: FormGroup;\n  submitted = false;\n  loading = false;\n  todoList: Array<{ title: string, description: string }> = [];\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private todoService: TodoService,\n    private authenticationService: AuthenticationService\n  ) {\n    this.listTode();\n  }\n\n  ngOnInit() {\n    this.todoForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n\n    this.listTode();\n  }\n\n  onSubmit() {\n    console.log('this = ', this);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.todoForm.invalid) {\n      alert('form invalid');\n    }\n\n    const currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n    if (currentUser && currentUser.data && currentUser.data._id) {\n      this.todoForm.value.createdBy = currentUser.data._id;\n    }\n\n    this.loading = true;\n    this.todoService.save(this.todoForm.value)\n      .pipe(first())\n      .subscribe(\n        (response: any) => {\n          console.log('response.data ', response.data);\n          this.todoList.push(response.data);\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          console.log('error', error);\n          if (error.status === 404) {\n            alert(error.error.data);\n          } else if (error.status === 403) {\n            alert(error.error.message);\n            this.router.navigate(['/login']);\n          }\n          this.loading = false;\n        });\n  }\n\n  listTode() {\n    const currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n    let userId = '';\n    if (currentUser && currentUser.data && currentUser.data._id) {\n      userId = currentUser.data._id;\n    }\n\n    this.todoService.getAll(userId)\n      .subscribe(\n        (response: any) => {\n          if (response && response.data) {\n            this.todoList = response.data;\n          }\n          // this.todoList = response.data;\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          console.log('error', error);\n          if (error.status === 404) {\n            alert(error.data);\n          }\n          this.loading = false;\n        });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"col-md-6\">\n                <form [formGroup]=\"todoForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"title\">Title</label>\n                        <input type=\"text\" formControlName=\"title\" class=\"form-control\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea type=\"text\" formControlName=\"description\" class=\"form-control\" required></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary\">Add</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Tile</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let el of todoList;  index as i\">\n                            <th>{{i+1}}</th>\n                            <td>{{el.title}}</td>\n                            <td>{{el.description}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}