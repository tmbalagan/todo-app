{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helper/auth.guard.ts","./src/app/_helper/index.ts","./src/app/_helper/jwt.interceptor.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/todo.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/todo/todo.component.ts","./src/app/todo/todo.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthenticationService } from '../_services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        // console.log('currentUser',currentUser);\r\n        if (currentUser) {\r\n            // authorised so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n    }\r\n}","export * from './jwt.interceptor';\r\nexport * from './auth.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        // const currentUser = sessionStorage.getItem('currentUser');\r\n\r\n        console.log('jwt ', JSON.parse(sessionStorage.getItem('currentUser')));\r\n        // console.log('jwt iiii', sessionStorage.getItem('currentUser'));\r\n        if (JSON.parse(sessionStorage.getItem('currentUser')) !== null) {\r\n            if (currentUser && currentUser.token) {\r\n                request = request.clone({\r\n                    setHeaders: {\r\n                        Authorization: `Bearer ${currentUser.token}`\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: ''\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, from } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { User } from '../_model/user.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(sessionStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        console.log('this.currentUserSubject', this.currentUserSubject);\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>('/auth/login', { username, password })\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }\r\n\r\n                return user;\r\n            }, error => {\r\n                console.log('error', error);\r\n                if (error.status === 404) {\r\n                    alert(error.data);\r\n                } else if (error.status === 302) {\r\n                    alert(error.data);\r\n                }\r\n            }\r\n            ));\r\n    }\r\n\r\n    register(username: string, password: string) {\r\n        return this.http.post<any>('/auth/register', { username, password })\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }\r\n\r\n                return user;\r\n            }, error => {\r\n                console.log('error', error);\r\n                if (error.status === 404) {\r\n                    alert(error.data);\r\n                } else if (error.status === 302) {\r\n                    alert(error.data);\r\n                }\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        sessionStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}\r\n\r\n","export * from './authentication.service';\r\nexport * from './todo.service';\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Todo } from '../_model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll(userId: any) {\r\n        return this.http.post('api/todo/list', { id: userId });\r\n    }\r\n    save(todo: Todo) {\r\n        return this.http.post('api/todo/save', todo);\r\n    }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TodoComponent } from './todo/todo.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './_helper';\n\nconst routes: Routes = [\n  { path: '', component: TodoComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User } from './_model/user.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crud';\n  currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n}\n}\n","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-black\" *ngIf=\"currentUser\">\n  <div class=\"navbar-nav\">\n      <button class=\"btn btn-primary\" (click)=\"logout()\">Logout</button>\n  </div>\n</nav>\n\n\n<!-- main app container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-6 offset-sm-3\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from './_helper';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  loading = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    console.log('this = ', this.loginForm);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      alert('form invalid');\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.loginForm.value.username, this.loginForm.value.password)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          console.log('error', error);\n          console.log('error status', error.status);\n\n          if (error.status === 404) {\n            alert(error.error.data);\n          } else if  (error.status === 302) {\n            alert(error.error.data);\n          }\n          this.loading = false;\n        });\n  }\n}\n","<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" required />\n        <div class=\"error\"\n            *ngIf=\"loginForm.get('username').hasError('required') && loginForm.get('username').touched\">\n            UserName is required\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" required />\n        <div class=\"error\"\n            *ngIf=\"loginForm.get('password').hasError('required') && loginForm.get('password').touched\">\n            Password is required\n        </div>\n        <div class=\"error\" *ngIf=\"loginForm.get('password').hasError('length')\">\n            Password must min 6 character length\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"!loginForm.valid\" class=\"btn btn-primary\">Login</button>\n        <a [routerLink]=\"['/register']\" class=\"btn btn-link\">Register</a>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) {\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.register(this.registerForm.value.username, this.registerForm.value.password)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          if (error.status === 404) {\n            alert(error.error.data);\n          } else if  (error.status === 302) {\n            alert(error.error.data);\n          }\n          // this.loading = false;\n        });\n  }\n\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" />\n        <div class=\"error\"\n            *ngIf=\"registerForm.get('username').hasError('required') && registerForm.get('username').touched\">\n            UserName is required\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" />\n        <div class=\"error\"\n            *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\">\n            Password is required\n        </div>\n        <div class=\"error\" *ngIf=\"registerForm.get('password').hasError('length')\">\n            Password must min 6 character length\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\">Register</button>\n        <a [routerLink]=\"['/login']\" class=\"btn btn-link\">Login</a>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TodoService, AuthenticationService } from '../_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n\n  todoForm: FormGroup;\n  submitted = false;\n  loading = false;\n  todoList: Array<{ title: string, description: string }> = [];\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private todoService: TodoService,\n    private authenticationService: AuthenticationService\n  ) {\n    this.listTode();\n  }\n\n  ngOnInit() {\n    this.todoForm = this.formBuilder.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required]\n    });\n\n    this.listTode();\n  }\n\n  onSubmit() {\n    console.log('this = ', this);\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.todoForm.invalid) {\n      alert('form invalid');\n    }\n\n    const currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n\n    if (currentUser && currentUser.data && currentUser.data._id) {\n      this.todoForm.value.createdBy = currentUser.data._id;\n    }\n\n    this.loading = true;\n    this.todoService.save(this.todoForm.value)\n      .pipe(first())\n      .subscribe(\n        (response: any) => {\n          console.log('response.data ', response.data);\n          this.todoList.push(response.data);\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          console.log('error', error);\n          if (error.status === 404) {\n            alert(error.error.data);\n          } else if (error.status === 403) {\n            alert(error.error.message);\n            this.router.navigate(['/login']);\n          }\n          this.loading = false;\n        });\n  }\n\n  listTode() {\n    const currentUser = JSON.parse(sessionStorage.getItem('currentUser'));\n    let userId = '';\n    if (currentUser && currentUser.data && currentUser.data._id) {\n      userId = currentUser.data._id;\n    }\n\n    this.todoService.getAll(userId)\n      .subscribe(\n        (response: any) => {\n          if (response && response.data) {\n            this.todoList = response.data;\n          }\n          // this.todoList = response.data;\n          this.router.navigate(['/todo']);\n        },\n        error => {\n          console.log('error', error);\n          if (error.status === 404) {\n            alert(error.data);\n          }\n          this.loading = false;\n        });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"col-md-6\">\n                <form [formGroup]=\"todoForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"title\">Title</label>\n                        <input type=\"text\" formControlName=\"title\" class=\"form-control\" required />\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"description\">Description</label>\n                        <textarea type=\"text\" formControlName=\"description\" class=\"form-control\" required></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <button class=\"btn btn-primary\">Add</button>\n                    </div>\n                </form>\n            </div>\n            <div class=\"col-md-6\">\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Tile</th>\n                            <th>Description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let el of todoList;  index as i\">\n                            <th>{{i+1}}</th>\n                            <td>{{el.title}}</td>\n                            <td>{{el.description}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}